# This is a basic workflow to help you get started with Actions

name: Rasa-training-testing

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [Rasa-training-testing]

jobs:
  lint-testing:
    name: Code Formatting Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements.txt
    - name: Code Formatting Tests
      working-directory: ${{ github.workspace }}
      run: |
        make lint

  type-testing:
    name: Type Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Type Checking
      working-directory: ${{ github.workspace }}
      run: |
        make types

  training:
    name: Train Model
    runs-on: ubuntu-latest
    needs: [lint-testing, type-testing]

    env:
      RASA_VERSION: 2.1.3-spacy-de
      RUN_TRAINING: false

    steps:
      - uses: actions/checkout@v1
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Did Training Data Change
        if: |
            contains(  steps.files.outputs.all, 'data/' )
            || contains(  steps.files.outputs.all, 'config.yml' )
            || contains(  steps.files.outputs.all, 'domain.yml' )
        run: echo "RUN_TRAINING=true" >> $GITHUB_ENV
      - name: Rasa Train
        if: env.RUN_TRAINING == 'true'
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          rasa_version: ${{ env.RASA_VERSION }}
          rasa_test: false
          data_validate: true
          github_token: ${{ secrets.TOKEN }}

  test-model:
    name: Test Model
    runs-on: ubuntu-latest
    needs: [training]

    env:
      RASA_VERSION: 2.1.3-spacy-de

    steps:
      - uses: actions/checkout@v1
      - name: Rasa Test
        if: ${{ env.RUN_TRAINING }} == 'true'
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          rasa_version: ${{ env.RASA_VERSION }}
          rasa_train: false
          test_type: all
          data_validate: true
          cross_validation: true
          publish_summary: true
          github_token: ${{ secrets.TOKEN }}
      - name: Upload model
        if: ${{ env.RUN_TRAINING }} == 'true'
        uses: actions/upload-artifact@main
        with:
          name: model
          path: models/



