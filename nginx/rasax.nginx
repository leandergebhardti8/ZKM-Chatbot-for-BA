upstream docker-stack {
  server rasa-production:5005 max_fails=0;
}

upstream worker-stack {
  server rasa-worker:5000 max_fails=0;
}

upstream client-stack {
  server client:8080 max_fails=0;
}

server {
    listen 8080;

    server_name _;

    return 301 https://$host$request_uri;
}

server {
  listen    8443 ssl;
  ## include           /opt/bitnami/nginx/conf/conf.d/ssl.conf;

  keepalive_timeout   30;
  client_max_body_size 800M;

  ssl_certificate    /opt/bitnami/certs/fullchain.pem; 
  ssl_certificate_key /opt/bitnami/certs/privkey.pem; 
 
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;
 
  location /core/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass http://docker-stack/;
  }

  # avoid users having to change how they configure
  # their credentials URLs between Rasa and Rasa X
  location /webhooks/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass http://docker-stack/webhooks/;
  }

  location /chatbot {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    rewrite /chatbot/(.*) /$1 break;
    rewrite /chatbot / break;
    proxy_pass http://client-stack/;
}

  location /train {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass http://worker-stack/train;
}

  location / {
    proxy_http_version 1.1;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://docker-stack;
  }

  # pass chat message to production service if environment query parameter
  # is set to `production`, or that parameter isn't set
  #location /api/chat$ {
   # if ($arg_environment = "") {
    #    rewrite ^ /core/webhooks/rasa/webhook last;
   # }
   # if ($arg_environment = "production") {
   #     rewrite ^ /core/webhooks/rasa/webhook last;
   # }
   # proxy_pass http://docker-rasax-api/api/chat;
 # }

  location /nginx_status {
    stub_status on;

    access_log off;
    allow 127.0.0.1;
    deny all;
  }
}
